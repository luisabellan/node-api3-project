"use strict";var express=require("express"),cors=require("cors"),users=require("../users/userDb"),router=express.Router();function validatePost(){return function(t,s,e){return t.body?t.body.text?void 0:s.status(400).json({message:"missing required text field"}):s.status(400).json({message:"missing post data"})}}function validateUserId(){return function(s,e,n){users.findById(s.params.id).then(function(t){t?(s.user=t,n()):e.status(404).json({message:"invalid user id"})}).catch(function(t){n(t)})}}function validateUser(){return function(t,s,e){return t.body?t.body.name?void e():s.status(400).json({message:"missing required name field"}):s.status(400).json({message:"missing user data"})}}router.get("/",function(t,s){var e={sortBy:t.query.sortBy,limit:t.query.limit};users.find(e).then(function(t){s.status(200).json(t)}).catch(function(t){next(t)})}),router.get("/:id",validateUserId(),function(t,s){s.status(200).json(t.user)}),router.post("/",validateUser(),function(t,s){users.add(t.body).then(function(t){s.status(201).json(t)}).catch(function(t){next(t)})}),router.put("/:id",validateUserId(),function(t,s){users.update(t.params.id,t.body).then(function(t){s.status(200).json(t)}).catch(function(t){next(t)})}),router.delete("/:id",validateUserId(),function(t,s){users.remove(t.params.id).then(function(t){s.status(200).json({message:"The user has been nuked"})}).catch(function(t){next(t)})}),router.get("/:id/posts",validateUserId(),function(t,s){users.findUserPosts(t.params.id).then(function(t){s.status(200).json(t)}).catch(function(t){next(t)})}),router.get("/:id/posts/:postId",validateUserId(),function(t,s){users.findUserPostById(t.params.id,t.params.postId).then(function(t){t?s.json(t):s.status(404).json({message:"Post was not found"})}).catch(function(t){next(t)})}),router.post("/:id/posts",validateUserId(),validatePost(),function(t,s){if(!t.body.text)return s.status(400).json({message:"Need a value for text"})}),module.exports=router;